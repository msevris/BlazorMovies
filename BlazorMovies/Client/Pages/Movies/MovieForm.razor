
    <EditForm Model="Movie" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label>Title:</label>
            <div>
                <InputText class="form-control" @bind-Value="@Movie.Title" />
                <ValidationMessage For="@(() => Movie.Title)" />
            </div>
        </div>
        <div class="form-group">
            <label>InTheaters</label>
            <div>
                <InputCheckbox @bind-Value="@Movie.InTheaters" />
                <ValidationMessage For="@(() => Movie.InTheaters)" />
            </div>
        </div>
        <div class="form-group">
            <label>Trailer:</label>
            <div>
                <InputText class="form-control" @bind-Value="@Movie.Trailer" />
                <ValidationMessage For="@(() => Movie.Trailer)" />
            </div>
        </div>
        <div class="form-group">
            <label>Release Date:</label>
            <div>
                <InputDate class="form-control" @bind-Value="@Movie.ReleaseDate" />
                <ValidationMessage For="@(() => Movie.ReleaseDate)" />
            </div>
        </div>
        <div class="form-group">
            <InputImage Label="Picture" OnSelectedImage="PosterSelected" ImageURL="@imageURL" />
        </div>
        <div class="form-group form-markdown">
            <InputMarkdown @bind-Value="Movie.Summary"
                           Label="Summary"
                           For="@(() => Movie.Summary)" />
        </div>

        <div class="form-group">
            <label>Genres:</label>
            <div>
                <MultipleSelector/>
            </div>
        </div>

        <button class="btn btn-primary" type="submit">Save Changes</button>
    </EditForm>



@code {
    [Parameter] public Movie Movie { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public List<Genre> SelectedGenres { get; set; }
    [Parameter] public List<Genre> NotSelectedGenres { get; set; }

    private List<MultipleSelectorModel> Selected = new List<MultipleSelectorModel>(); 
    private List<MultipleSelectorModel> NotSelected = new List<MultipleSelectorModel>(); 


    private string imageURL;

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(Movie.Poster))
        {
            imageURL = Movie.Poster;
            Movie.Poster = null;
        }
    }

    private void PosterSelected(string imageBase64)
    {
        Movie.Poster = imageBase64;
        imageURL = null;
        Console.WriteLine(imageBase64);
    }

}
